const phasOwn = Object.prototype.hasOwnProperty;
export function objectHasOwn(object, property) {
    if (object == null) {
        throw new TypeError('Cannot convert undefined or null to object');
    }
    return phasOwn.call(Object(object), property);
}
/*#__PURE__*/
export function isSupported() {
    return 'hasOwn' in Object && typeof Object.hasOwn === 'function';
}
/*#__PURE__*/
export function isPolyfilled() {
    return Object.hasOwn === objectHasOwn;
}
export function apply() {
    if (!isSupported()) {
        Object.defineProperty(Object, 'hasOwn', {
            value: objectHasOwn,
            configurable: true,
            writable: true
        });
    }
}
//# sourceMappingURL=object-hasown.js.map