export class AggregateError extends Error {
    constructor(errors, message, options = {}) {
        super(message);
        Object.defineProperty(this, 'errors', {
            value: Array.from(errors),
            configurable: true,
            writable: true
        });
        if (options.cause) {
            Object.defineProperty(this, 'cause', {
                value: options.cause,
                configurable: true,
                writable: true
            });
        }
    }
}
/*#__PURE__*/
export function isSupported() {
    return typeof globalThis.AggregateError === 'function';
}
/*#__PURE__*/
export function isPolyfilled() {
    // @ts-expect-error `AggregateError`
    return globalThis.AggregateError === AggregateError;
}
export function apply() {
    if (!isSupported()) {
        // @ts-expect-error `AggregateError`
        globalThis.AggregateError = AggregateError;
    }
}
//# sourceMappingURL=aggregateerror.js.map