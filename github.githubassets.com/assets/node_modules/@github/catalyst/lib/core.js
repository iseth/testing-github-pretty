import {
    register
} from './register.js';
import {
    bind,
    bindShadow
} from './bind.js';
import {
    autoShadowRoot
} from './auto-shadow-root.js';
import {
    defineObservedAttributes,
    initializeAttrs
} from './attr.js';
const instances = new WeakSet();
export function initializeInstance(instance, connect) {
    instance.toggleAttribute('data-catalyst', true);
    customElements.upgrade(instance);
    instances.add(instance);
    autoShadowRoot(instance);
    initializeAttrs(instance);
    bind(instance);
    if (connect)
        connect.call(instance);
    if (instance.shadowRoot)
        bindShadow(instance.shadowRoot);
}
export function initializeClass(classObject) {
    defineObservedAttributes(classObject);
    register(classObject);
}
export function initialized(el) {
    return instances.has(el);
}
//# sourceMappingURL=core.js.map